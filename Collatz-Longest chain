//Longest Collatz chain

#include<iostream>
#include <chrono>
#include<cmath>
struct Chain{
   long long count;
   long long number;
};
Chain getchain(long long n){
   long long k = n;
   long long i = 0;
   while (n!=1){
     if (n%2==0) n/=2;
     else n=n*3+1;
     i++;
   }
   return Chain{i,k};
}
int main(){
  auto start = std::chrono::high_resolution_clock::now();
  Chain maxchain = Chain{0,0};
  for ( long long i=1;i<=pow(10,6);i++)
  {    
      Chain chain = getchain(i);
      if (chain.count>maxchain.count) maxchain=chain;
  }   
  auto end =  std::chrono::high_resolution_clock::now();
  auto duration =
     std:: chrono::duration_cast<std::chrono::microseconds>(end-start); 
  std::cout<<"Longest_Chain:"<<maxchain.count<<std::endl<<"Number: "<<maxchain.number<<std::endl<<"execution time: "<<(duration).count()<<" ms";
} 

//"Longest_Chain: 524
//"Number: 837799
//"Execution time: 1992553 ms